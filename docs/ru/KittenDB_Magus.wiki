"KittenDB Magus" предназначен для получения рекомендаций потенциально
интересных пользователю объектов на основе тех объектов, которые ему
интересны в данный момент. Для получения информации об интересах
использует данные, хранящиеся в hints/rating-engine.

В зависимости от технических возможностей, идентификация объектов производится
по их номерам (id) или приведённым к каноническому виду названиям, хранящимся
в Hints. В последнем случае, это название используется во всех возможных
местах вместо id.

==Интерфейс==
Движок поддерживает memcached интерфейс.

=== Получение рекомендуемых объектов по текущим интересам пользователя ===
Запрос является парой set-get ввиду особенностей интерфейса memcached:
<code> set("hints{$random_tag}", "{$id},{$type},{$n},{$obj_1_id},{$app_1_rating},{$obj_2_id},{$obj_2_rating},...,{$obj_n_id},{$obj_n_rating}&#35;{$cnt}");</code>
<code> get("hints{$random_tag}");</code>, где
<code> $random_tag</code> – случайное целое положительное 32-битное число,
  одинаковое для обоих запросов,
<code> $id</code> – id пользователя,
<code> $type</code> – тип объектов, совпадает с типом объекта, хранимым в Hints,
<code> $n</code> – количество объектов пользователя,
<code> $obj_i_id</code> и <code> $obj_i_rating</code> – (id или название) и
  рейтинг, соответственно, i-го объекта, взятые из hints, в порядке убывания
  рейтинга (1 <= i <= $n),
<code> $cnt</code> – желаемое количество рекомендаций.

Результат возвращается в виде разделённого запятыми списка рекомендуемых
объектов. Объекты возвращаются в виде своего id или названия, в зависимости
от типа движка. Если объект возвращается в виде названия, то дополнительно
через пробел указывается {$owner_id}_{$obj_id} одного из объектов с таким
названием.

=== Добавление исключения в рекомендуемые объекты ===
<code> add("exception{$id},{$type}", $obj_id);</code>

<code> $id</code> – id пользователя,
<code> $type</code> – тип объекта,
<code> $obj_id</code> – (id или название) объекта.

После добавления в исключения объект больше не будет рекомендоваться. Кроме
того похожие на него объекты станут рекомендоваться с меньшей вероятностью.

Также поддерживается упрощённый интерфейс для рекомендации приложений.

=== Получение рекомендуемых приложений по текущим интересам пользователя ===
<code> get("apps_hints{$id},{$n},{$app_1_id},{$app_1_rating},{$app_2_id},{$app_2_rating},...,{$app_n_id},{$app_n_rating}&#35;{$cnt}");</code>

<code> $id</code> – id пользователя,
<code> $n</code> – количество установленных им приложений (до 50-ти самых
  посещаемых),
<code> $app_i_id</code> и <code> $app_i_rating</code> – id и рейтинг из hints
  i-го приложения пользователя в порядке убывания рейтинга (1 <= i <= $n),
<code> $cnt</code> – желаемое количество рекомендаций.

Результат возвращается в виде разделённого запятыми списка рекомендуемых
приложений.

=== Добавление исключения при рекомендации приложений ===
<code> add("apps_exception{$id}", $app_id); </code>

<code> $id</code> – id пользователя,
<code> $app_id</code> – id приложения.

После добавления в исключения приложение больше не будет рекомендоваться. Кроме
того похожие на него приложения станут рекомендоваться с меньшей вероятностью.
