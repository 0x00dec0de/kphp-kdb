=== memcache протокол ===
==== set ====
 Как в обычном search-engine 

==== Поисковые запросы ====
 Все веса целые 32 битные числа. 
$word_title_weight - вес слова в заголоке 
$word_text_weight - вес слова в тексте 
$restrictions = "[12R30][S10000][7777777D]<$hash>"; #ограничения на выборку, как и в обычном search 
$rating_weights = "{$rate_weight}{$rate_normalize_function_type}R";  #optional ('R' - по убыванию, 'r' - по возрастанию) 
$rating_weights .= "{$sate_weight}{$sate_normalize_function_type}S"; #optional 
$selection_size - размер выборки или 0 в случае, если нужнл вернуть только количество найденных объектов 
$type = 'x'; #без группировки по хешам 
$type = 'u'; #группировка по хешам 
$tags_and_query - обязательные теги,слова поискового запроса и опциональные теги разделенные плюсом 
Обязательные теги обязательно  идут в начале запроса, а опциональные в конце. Обязательный тег всегда должен в найденном документе, а опциональный только вносит вклад в рейтинг документа. Кроме того в документе должно встречаться одно слово из поискового запроса.
$get_query = "search$type#$word_title_weight,$word_text_weight,$text_weight,$tag_weight,$rating_weights$selection_size$restrictions($tags_and_query)"; 
$rate_normalize_function_type может быть 'L' - логарифмической или 'l' - линейной функцией. 
$tag_weight (вещественное число от 0 до 1) -  вклад тегов в релевантность (1 - так же, как слово, 0.5 - в два раза меньше, чем слово). Начиная с версии search-x-engine-0.05.

get($get_query) возвращает выборку в формате аналогичном search, каждый объект возвращается вместе с рейтингом. При запросе searchu каждый объект возвращается вместе с рейтингом и хешом. Объекты возвращаются по возрастанию рейтинга. 

Нельзя при запросе <b>searchu</b> (группировка по хешам), указывать selection_size равным нулю.

